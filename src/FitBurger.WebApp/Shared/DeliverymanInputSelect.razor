@using FitBurger.WebApp.Models.Deliveryman
@using FitBurger.WebApp.Services
@using FitBurger.WebApp.Models.Abstractions

<AuthorizeView Roles="Administrador,Atendente">
    <Authorized>
        @if (Model is IDeliveryman model && Deliverymen?.Length > 0)
        {
            <div class="form-row">
                <label class="col-sm-3 col-form-label">Motoboy</label>
                <div class="col" style="">
                    <div class="form-group">
                        <InputSelect ValueExpression="@(() => model.DeliverymanId)"
                                     Value="@model.DeliverymanId"
                                     ValueChanged="@((int? value) => OnValueChanged(value))"
                                     class="form-control valid">
                            <option disabled selected value>Selecione uma opção</option>
                            @foreach (var deliveryman in Deliverymen)
                            {
                                <option value="@deliveryman.Id">@deliveryman.Name</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => model.DeliverymanId)" class="form-text"/>
                    </div>
                </div>
            </div>
        }
    </Authorized>
</AuthorizeView>

@code {

    [Parameter]
    public object Model { get; set; } = default!;

    [Inject]
    public IListService<ListDeliveryman> ListService { get; set; } = default!;

    private ListDeliveryman[]? Deliverymen { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Deliverymen = await ListService.ListAsync();
    }

    private void OnValueChanged(int? value)
    {
        if (Model is IDeliveryman model)
        {
            model.DeliverymanId = value;
        }
    }

}